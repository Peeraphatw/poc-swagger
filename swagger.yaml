openapi: 3.0.1
info:
  title: Mr.FOX Member API Overview
  version: 1.0.0
servers:
- url: https://auclyx5d6d.execute-api.ap-southeast-1.amazonaws.com/Prod
- url: https://core-api.mrfox.app/v1
# - url: "https://{basePath}"
#   variables:
#     basePath:
#       default: "auclyx5d6d.execute-api.ap-southeast-1.amazonaws.com/Prod"
#       enum:
#           - "auclyx5d6d.execute-api.ap-southeast-1.amazonaws.com/Prod"
#           - "core-api.mrfox.app/v1"

paths:
# test
  /testlambda:
    get:
      tags:
        - Test
      summary: Test Lambda
      operationId: TestLambda
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

# authen
  /login:
    post:
      tags:
        - Authen
      summary: Authen to get token
      operationId: AuthenLogin
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                country_id:
                  type: string
                  example: '88'
                username:
                  type: string
                  example: '8908424'
                password:
                  type: string
                  example: '12345678'
              required:
                - country_id
                - username
                - password
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

# chat
  /chat/chat_room:
    post:
      tags:
        - Chat
      summary: Get chat room
      operationId: ChatRoom
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                domain_id:
                  type: integer
                  example: 0
                profile_id:
                  type: string
                  example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
                promotion_type:
                  type: string
                  enum: [VideoCall, Voice, ChatRoom, Chat, QA, Vote, Sticker, Share, Translate, Feed, Live, Undefined, Gift, Buffet, Secret, FrameAndLicense, HireRate, FreeShooting, EBook, FreeVote, PremiumVote, VipVote, StockPhoto, FreeBuffet, BuyFrame, Party, Dinner, SecretLive, PhotoTrip, BasicVote, UnlockPost, LiveArchive, LiveCommerce, Follow, NFT, NFTTicket]
                  example: 'VideoCall'
              required:
                - domain_id
                - profile_id
                - promotion_type
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

# feed
  /feed/follow:
    post:
      tags:
        - Feed
      summary: Get social media only following all domain
      operationId: FeedFollowAllDomain
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                profile_id:
                  type: string
                  example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
                page_size:
                  type: integer
                  default: 1
                  example: 1
                page_current:
                  type: integer
                  default: 20
                  example: 20
                filter_media_type:
                  type: string
                  enum: [All, Daily, Follower, Awards, Buffet, Secret, TopSpender, Insights, PersonalInfo, TopFan, Filter, Content, TagUser, DailyAndAwards, UnlockPost, NFT, NFTWallet, LiveArchive, Profile]
                  example: 'All'
                filter_sort_by:
                  type: string
                  enum: [All, TopViews, TopCoins, TopVotes]
                  example: 'All'
                filter_media_type_source:
                  type: string
                  enum: [All, Image, Album, Video, Article, Ticket]
                  example: 'All'
                filter_period:
                  type: string
                  enum: [All, Day1, Day3, Day7, Day14, Month1, Month3, Month6, Year1]
                  example: 'All'
                filter_country:
                  type: string
                  example: ''
                filter_nationality:
                  type: string
                  example: ''
                social_media_category:
                  type: string
                  enum: [ALL, SexyNoneBikini, SexyBikini, NoBra, FineArt, BeautifulThailand, Bikini, NonBikini, Topless, Shoot10, SexyVideo, Secret, Content, UnlockPost, LiveArchive, NFT, Profile, Daily]
                  example: 'ALL'
                sort_rank:
                  type: string
                  enum: [TOTAL_VOTES, MONTH_VOTES, TOTAL_COINS, MONTH_COINS, RATING, CALLS, REVIEWS, VIEW, AWARDS, SINCE, TODAY_VOTES, TODAY_COINS, FOLLOWER, TOTAL_HUNTS, TODAY_HUNTS, TOTAL_STICKER_PARTY, DAY_STICKER_PARTY, MONTH_HUNTS, TOTAL_SHOOT, MONTH_SHOOT, TODAY_SHOOTS, YEAR_VOTES, WEEK_VOTES, YEAR_COINS, WEEK_COINS, TOTAL_SHARES, YEAR_SHARES, MONTH_SHARES, WEEK_SHARES, TODAY_SHARES, TOTAL_TRAFFICS, YEAR_TRAFFICS, MONTH_TRAFFICS, WEEK_TRAFFICS, TODAY_TRAFFICS, TOTAL_VIEWS, YEAR_VIEWS, MONTH_VIEWS, WEEK_VIEWS, TODAY_VIEWS, PERIOD_VOTES, PERIOD_POPULAR_VOTES, PERIOD_COINS, PERIOD_VIEWS, PERIOD_LIKES, PERIOD_FOLLOWERS]
                  example: 'TOTAL_VOTES'
                filter_picture:
                  type: string
                  enum: [ALL, Blur, Clear]
                  example: 'ALL'
                start_index:
                  type: integer
                  default: 0
                  example: 0
                filter_nft_status:
                  type: string
                  enum: [All, ForSale, Keep]
                  example: 'All'
              required:
                - page_size
                - page_current
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /feed/like_post:
    post:
      tags:
        - Feed
      summary: Like post
      operationId: FeedLikePost
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                profile_id:
                  type: string
                  example: '91f9ca7c-19c4-4be1-92b7-be148efd0c1a'
                media_id:
                  type: string
                  example: '9eaad04f-f83f-4ac7-8886-e8cc4a1bd6b4'
                is_like:
                  type: boolean
                  example: true
              required:
                - profile_id
                - media_id
                - is_like
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /feed/delete_media:
    delete:
      tags:
        - Feed
      summary: Delete post
      operationId: DeleteMedia
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                media_id:
                  type: string
                  example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
              required:
                - media_id
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

# follow
  /follow:
    post:
      tags:
        - Follow
      summary: Follow person
      operationId: Follow
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                profile_id:
                  type: string
                  example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
                is_follow:
                  type: boolean
                  example: true
              required:
                - profile_id
                - is_follow
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /follow/list:
    get:
      tags:
        - Follow
      summary: Follow list
      operationId: FollowList
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page_current
          schema:
            type: integer
            default: 1
          required: true
          description: Page current
          example: 1
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
          required: true
          description: Page size
          example: 20
        - in: query
          name: target_profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
        - in: query
          name: sort
          schema:
            type: string
            enum:
              - Aliasname
              - Lastest
              - Earlist
          required: true
          description: Sort type
          example: 'Aliasname'
        - in: query
          name: type
          schema:
            type: string
            enum:
              - Follower
              - Following
          required: true
          description: Follow list type
          example: 'Follower'
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: Follow list search
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

# profile
  /profile/domain_apply_creator:
    get:
      tags:
        - Profile
      summary: All domain info for profile
      operationId: GetDomainApplyCreator
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /profile/domain_for_creator:
    get:
      tags:
        - Profile
      summary: Domain info for profile
      operationId: GetDomainForCreator
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
        - in: query
          name: promotion_type
          schema:
            type: string
            enum: [VideoCall, Voice, ChatRoom, Chat, QA, Vote, Sticker, Share, Translate, Feed, Live, Undefined, Gift, Buffet, Secret, FrameAndLicense, HireRate, FreeShooting, EBook, FreeVote, PremiumVote, VipVote, StockPhoto, FreeBuffet, BuyFrame, Party, Dinner, SecretLive, PhotoTrip, BasicVote, UnlockPost, LiveArchive, LiveCommerce, Follow, NFT, NFTTicket]
            default: 'Chat'
          required: true
          description: Promotion type
          example: 'Chat'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /profile/get_user_info:
    get:
      tags:
        - Profile
      summary: Profile info
      operationId: GetProfileInfo
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /profile/get_user_insight:
    get:
      tags:
        - Profile
      summary: Profile info (only userInfo, insights and nft count)
      operationId: GetUserInsight
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /profile/get_call_info:
    get:
      tags:
        - Profile
      # deprecated: true
      summary: Profile call info
      operationId: GetCallInfoProfile
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
        - in: query
          name: domain_id
          schema:
            type: integer
          required: true
          description: Domain id
          example: 1
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /profile/update_user_info:
    post:
      tags:
        - Profile
      summary: Edit profile info
      operationId: UpdateUserInfo
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                profile_id:
                  type: string
                  example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
                thai_firstname:
                  type: string
                  example: 'หทัยชนก'
                thai_lastname:
                  type: string
                  example: 'ไกรมงคล'
                thai_nickname:
                  type: string
                  example: 'นุ่นนุ่น'
                english_firstname:
                  type: string
                  example: 'Hataichanok'
                english_lastname:
                  type: string
                  example: 'Kraimongkol'
                english_nickname:
                  type: string
                  example: 'Hataichanok'
                english_aliasname:
                  type: string
                  example: 'Noonnnn'
                date_of_birth:
                  type: string
                  example: '1994-09-26T00:00:00'
                nationality_id:
                  type: integer
                  example: 177
                sex_id:
                  type: integer
                  example: 2
                description:
                  type: string
                  example: 'description'
                partner_external_id:
                  type: string
                  example: '7a3c5c8f-d985-4fd6-8313-78df5566c52b'
                profile_original_url:
                  type: string
                  example: 'https://upload-profile-stg.s3.ap-northeast-2.amazonaws.com/e2426c27-7c98-4c06-b641-5bbd380cae5d/2385ea51-992c-42f4-b282-df9f0ecdec4f.jpeg'
              required:
                - profile_id
                - thai_firstname
                - thai_lastname
                - thai_nickname
                - english_firstname
                - english_lastname
                - english_nickname
                - english_aliasname
                - date_of_birth
                - nationality_id
                - sex_id
                - description
                - partner_external_id
                - profile_original_url
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /profile/get_social_media:
    post:
      tags:
        - Profile
      summary: Get social media profile
      operationId: GetSocialMedia
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                profile_id:
                  type: string
                  example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
                page_current:
                  type: integer
                  default: 1
                  example: 1
                page_size:
                  type: integer
                  default: 20
                  example: 20
              required:
                - profile_id
                - page_size
                - page_current
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

# profile/introduce_clip
  /profile/introduce_clip/presign:
    get:
      tags:
        - Profile
      summary: Presign aws s3
      operationId: IntroduceClipPresign
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /profile/introduce_clip:
    get:
      tags:
        - Profile
      summary: Get introduce clip
      operationId: IntroduceClipGet
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Profile
      summary: Get introduce clip
      operationId: IntroduceClipPost
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                gu_id:
                  type: string
                  example: 'e2426c27-7c98-4c06-b641-5bbd380cae5d'
              required:
                - gu_id
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

# upload
  /upload/presign:
    post:
      tags:
        - Upload
      summary: Presign aws s3
      operationId: UploadPresignUrl
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 'test.jpg'
                type:
                  type: string
                  enum: [image, video]
                  example: 'image'
              required:
                - name
                - type
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /upload/profile_image:
    post:
      tags:
        - Upload
      summary: Edit profile image
      operationId: UploadProfileImage
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                profile_original_files:
                  type: string
                  example: 'images/test.jpg'
              required:
                - profile_original_files
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /upload/upload_post:
    post:
      tags:
        - Upload
      summary: Upload a new post in profile gallery
      operationId: UploadProfilePost
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                func:
                  type: string
                  enum: [picture, video]
                  example: 'picture'
                files:
                  type: string
                  example: 'images/test.jpg'
              required:
                - func
                - files
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

# master_data
  /master_data:
    get:
      tags:
        - MasterData
      summary: Master Data
      operationId: MasterData
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: q
          schema:
            type: string
            enum: [advanceSearchSorting, alertNotificationActivity, applicationRole, bank, country, countryFromRecipient, currencyExchangeRate, currencyExchangeRateSymbol, filterMediaType, filterMediaTypeSource, filterPeriod, filterPicture, filterSortBy, gender, mediaType, menuType, nationality, notificationActivity, notificationFilterType, notificationType, prefix, promotionType, province, religion, sex, socialMediaCategory, sortRank, sourceVote, topup]
            default: 'nationality'
          required: true
          description: Master Data
          example: 1
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

# nft
  /nft/collection:
    get:
      tags:
        - NFT
      summary: NFT collection list
      operationId: NFTCollection
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page_current
          schema:
            type: integer
            default: 1
          required: true
          description: Page current
          example: 1
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
          required: true
          description: Page size
          example: 20
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: '07650c2a-3848-4bea-883c-a839e14d6d70'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /nft/collection_id:
    get:
      tags:
        - NFT
      summary: NFT collection id list
      operationId: NFTCollectionId
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page_current
          schema:
            type: integer
            default: 1
          required: true
          description: Page current
          example: 1
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
          required: true
          description: Page size
          example: 20
        - in: query
          name: collection_id
          schema:
            type: integer
          required: true
          description: Collection id or typing -1 (Recent) and -2 (Ticket)
          example: 1
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: '07650c2a-3848-4bea-883c-a839e14d6d70'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /nft/detail:
    get:
      tags:
        - NFT
      summary: NFT product detail
      operationId: NFTDetail
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
          description: NFT product id
          example: 11449
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: NFT profile id
          example: '07650c2a-3848-4bea-883c-a839e14d6d70'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /nft/ticket:
    get:
      tags:
        - NFT
      summary: NFT Ticket list
      operationId: NFTTicket
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page_current
          schema:
            type: integer
            default: 1
          required: true
          description: Page current
          example: 1
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
          required: true
          description: Page size
          example: 20
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: '07650c2a-3848-4bea-883c-a839e14d6d70'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

# nft
  /nft_android/collection:
    get:
      tags:
        - NFT Android
      summary: NFT android collection list
      operationId: NFTAndroidCollection
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page_current
          schema:
            type: integer
            default: 1
          required: true
          description: Page current
          example: 1
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
          required: true
          description: Page size
          example: 20
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: '07650c2a-3848-4bea-883c-a839e14d6d70'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /nft_android/collection_id:
    get:
      tags:
        - NFT Android
      summary: NFT android collection id list
      operationId: NFTAndroidCollectionId
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page_current
          schema:
            type: integer
            default: 1
          required: true
          description: Page current
          example: 1
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
          required: true
          description: Page size
          example: 20
        - in: query
          name: collection_id
          schema:
            type: integer
          required: true
          description: Collection id
          example: 1
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: '07650c2a-3848-4bea-883c-a839e14d6d70'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /nft_android/detail:
    get:
      tags:
        - NFT Android
      summary: NFT android product detail
      operationId: NFTAndroidDetail
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
          description: NFT product id
          example: 11449
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: NFT profile id
          example: '07650c2a-3848-4bea-883c-a839e14d6d70'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /nft_android/ticket:
    get:
      tags:
        - NFT Android
      summary: NFT Android ticket list
      operationId: NFTAndroidTicket
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page_current
          schema:
            type: integer
            default: 1
          required: true
          description: Page current
          example: 1
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
          required: true
          description: Page size
          example: 20
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: '07650c2a-3848-4bea-883c-a839e14d6d70'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'
  /nft_android/recent:
    get:
      tags:
        - NFT Android
      summary: NFT Android recent list
      operationId: NFTAndroidRecent
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page_current
          schema:
            type: integer
            default: 1
          required: true
          description: Page current
          example: 1
        - in: query
          name: page_size
          schema:
            type: integer
            default: 20
          required: true
          description: Page size
          example: 20
        - in: query
          name: profile_id
          schema:
            type: string
          required: true
          description: Target profile id
          example: '07650c2a-3848-4bea-883c-a839e14d6d70'
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '5XX':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
      description: 'jwt token from login'
  responses:
    OK:
      description: OK
    BadRequest:
      description: Bad request. Something went wrong.
    Unauthorized:
      description: Authorization information is missing or invalid.
    InternalServerError:
      description: Unexpected error.
